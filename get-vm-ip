#!/usr/bin/python 
#   get-node-ip - Get the IP address of a VM managed by virsh.

#   Copyright 2018-2023 Earl C. Ruby III
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.


import sys
import subprocess

def run_command(command):
    """Run a shell command and handle errors."""
    result = subprocess.run(command, shell=True, capture_output=True, text=True)
    if result.returncode != 0:
        print(f"Error running command: {result.stderr.strip()}")
        sys.exit(1)
    return result.stdout.strip()

def usage():
    print("usage: get-vm-ip hostname\n")
    print("This script will take a virsh-managed VM hostname and return the IP address.")

def main():
    if len(sys.argv) != 2:
        print("ERROR: Hostname is required")
        usage()
        sys.exit(1)

    hostname = sys.argv[1]

    # Get the MAC address of the VM
    mac_command = f"virsh -q domiflist {hostname} | awk '{{{{ print $5 }}}}'"
    mac = run_command(mac_command)
    if not mac:
        print(f"ERROR: Could not get MAC address for {hostname}")
        sys.exit(1)

    # Get the IP address using the MAC address
    arp_command = f"arp -e | grep -i {mac} | awk '{{{{ print $1 }}}}'"
    ip_address = run_command(arp_command)
    if not ip_address:
        print(f"ERROR: Could not find IP address for MAC {mac}")
        sys.exit(1)

    print(ip_address)

if __name__ == "__main__":
    main()
